<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>throw new exception();</title>
    <description>Blog about scalable software, personal opinion on software design and remember... throw a new exception once in a while.
</description>
    <link>http://thrownewexception.com/</link>
    <atom:link href="http://thrownewexception.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 03 Apr 2015 12:04:59 +0100</pubDate>
    <lastBuildDate>Fri, 03 Apr 2015 12:04:59 +0100</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Not every if--then-else statement, needs the	 else</title>
        <description>&lt;p&gt;As a software engineer, I have the opportunity to review a lot of code from other engineers. One thing that makes me happy is that the number of people doing a defensive code is growing, but there is still room for improvement. &lt;/p&gt;

&lt;p&gt;One thing that amuses me is the quantity of people doing the following piece of code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Divide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divisor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;divisor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArgumentOutOfRangeException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;divisor&amp;quot;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Divide by zero is not allowed&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divisor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;First the good things. The developer is doing a defensive code, validating the input arguments and throwing an informative exception.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;But, do we really need the else here? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The if-then-else statement exists to perform some action based on a condition. If the condition is true, the statements following the “then” are executed, otherwise it will continue to the “else” block and after this brach we’ll have an “interception” point on the flow. However, one of our branches is an exit point, we don’t want an interception happening after the “if-then-else” statement, we want the code to exit the method if the first condition is true. &lt;/p&gt;

&lt;p&gt;Resuming, no, we don’t need the else there.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;But, its just a detail…&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;At first, this seems to be just a little thing that doesn’t really matter, but what if we add more and more logic into the code without refactoring it? Have you thought about the maintainability problem that we might have in the future?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Where is this coming from?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I have a theory about why developers are still doing this. When learning how to program, we normally are taught the if-then-else statement before any learning on defensive code. As we practice our skills, we are doing more and more if-then-else statements until it becomes intrinsic in our brain and we do it without thinking. The problem is that we need to think to write a clean code.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;How can we stop doing it?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Everytime you have a code review, or change some code from another engineer, please check for code like this and alert your colleague for this. He will be grateful.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Mar 2015 00:00:42 +0000</pubDate>
        <link>http://thrownewexception.com/code/clean/2015/03/23/2015-03-23-stop-doing-if-return-else.html</link>
        <guid isPermaLink="true">http://thrownewexception.com/code/clean/2015/03/23/2015-03-23-stop-doing-if-return-else.html</guid>
        
        
        <category>code</category>
        
        <category>clean</category>
        
      </item>
    
      <item>
        <title>The art of coding</title>
        <description>&lt;p&gt;When someone outside the field asks me what I do for a living, I know that what I’m about to say to that person and  nothing is pretty much the same. If you are a software engineer, you may have experienced the same thing in the past. It doesn’t have to do with the person, but I couldn’t find an expression to transform software development in a sexy activity. Let’s be honest, you have plenty of cool TV shows about doctors (House, Grey Anatomy, etc), about lawyers (Suits, How to get away with murderer, etc), about detectives, policemen, etc. But about software engineering we don’t have much and the ones that exist, I think only software related staff watches them.&lt;/p&gt;

&lt;p&gt;If it’s hard for someone as creative as a TV shows writer, how to answer the question with some glamour and creativity?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What do I do for living?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I’m a software developer, you may not know what is it, but I do love software development, I think it’s amazing in every way. Writing code is like an art, it’s like creating a new piece of melody, painting the picture of what you want to build in your mind or writing a book. Every single line of code is something unique when it comes from someone that loves programming. Years of practice, trying a new technology or with a better design. Thinking about scalability, performance and code maintenance… always trying to do a better melody than the one before.&lt;/p&gt;

&lt;p&gt;Think about Facebook, Skype, Twitter, Linkedin, etc… Millions of unknown artists giving you art, everyday.&lt;/p&gt;

&lt;p&gt;I’m a software developer. I’m an artist. &lt;/p&gt;
</description>
        <pubDate>Sun, 08 Feb 2015 00:00:42 +0000</pubDate>
        <link>http://thrownewexception.com/software/design,/business/2015/02/08/2015-02-05-the-art-of-coding.html</link>
        <guid isPermaLink="true">http://thrownewexception.com/software/design,/business/2015/02/08/2015-02-05-the-art-of-coding.html</guid>
        
        
        <category>software</category>
        
        <category>design,</category>
        
        <category>business</category>
        
      </item>
    
  </channel>
</rss>
